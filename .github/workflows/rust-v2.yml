name: Rust (Ferron 2.x)

on:
  push:
    branches: ["develop-2.x"]
    paths:
      - "Cargo.lock"
      - "Cargo.toml"
      - "ferron/**"
      - "ferron-common/**"
      - "ferron-dns-builtin/**"
      - "ferron-load-modules/**"
      - "ferron-modules-builtin/**"
      - "ferron-passwd/**"
      - "ferron-precompress/**"
      - "ferron-yaml2kdl/**"
      - "ferron-yaml2kdl-core/**"
      - "ferron-build.yaml"
      - "ferron-build-override.yaml"
      - "smoketest/**"
      - ".github/workflows/rust-v2.yml"
  pull_request:
    branches: ["develop-2.x"]
    paths:
      - "Cargo.lock"
      - "Cargo.toml"
      - "ferron/**"
      - "ferron-common/**"
      - "ferron-dns-builtin/**"
      - "ferron-load-modules/**"
      - "ferron-modules-builtin/**"
      - "ferron-passwd/**"
      - "ferron-precompress/**"
      - "ferron-yaml2kdl/**"
      - "ferron-yaml2kdl-core/**"
      - "ferron-build.yaml"
      - "ferron-build-override.yaml"
      - ".github/workflows/rust-v2.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: warp-ubuntu-latest-x64-8x

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup cache
        uses: WarpBuilds/rust-cache@v2

      - name: Run Cargo tests
        run: cargo test --workspace --verbose

      - name: Build binaries
        shell: bash
        run: |
          cargo run --manifest-path build-prepare/Cargo.toml
          cd build-workspace
          while [ "$OLD_CONFLICTING_PACKAGES" != "$CONFLICTING_PACKAGES" ] || [ "$OLD_CONFLICTING_PACKAGES" = "" ]; do \
              OLD_CONFLICTING_PACKAGES=$CONFLICTING_PACKAGES; \
              CONFLICTING_PACKAGES=$( (cargo update -w --dry-run 2>&1 || true) | (grep -E '^error: failed to select a version for (the requirement )?`[^ `]+' || true) | sed -E 's|[^`]*`([^ `]+).*|\1|' | xargs); \
              if [ "$CONFLICTING_PACKAGES" = "" ]; then \
                  break; \
              fi; \
              if [ "$OLD_CONFLICTING_PACKAGES" = "$CONFLICTING_PACKAGES" ]; then \
                  echo "Couldn't resolve Cargo conflicts" >&2; \
                  exit 1; \
              fi; \
              if [ "$CONFLICTING_PACKAGES" != "" ]; then \
                  cargo update $CONFLICTING_PACKAGES || true; \
              fi; \
          done
          RUST_LIBC_UNSTABLE_MUSL_V1_2_3=1 cargo build --verbose --target-dir ../target
          cd ..

      - name: Smoke test the binary
        shell: bash
        run: |
          FERRON="$(pwd)/target/debug/ferron" bash smoketest/smoketest.sh

  check:
    runs-on: warp-ubuntu-latest-x64-8x
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Setup cache
        uses: WarpBuilds/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check linting
        run: cargo clippy --workspace -- -D warnings

  depcheck:
    runs-on: ubuntu-latest # GitHub-hosted runner
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install "cargo shear"
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm shear --force

      - name: Check for unused dependencies
        run: cargo shear
