name: Release (CI test)

on:
  push:
    branches: [ "develop" ]

jobs:
  release:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}
 
    # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cross
          - name: x86_64-unknown-linux-musl
            runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            command: cross
          - name: i686-unknown-linux-gnu
            runner: ubuntu-latest
            target: i686-unknown-linux-gnu
            command: cross
          - name: i686-unknown-linux-musl
            runner: ubuntu-latest
            target: i686-unknown-linux-musl
            command: cross
          - name: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            command: cross
          - name: aarch64-unknown-linux-musl
            runner: ubuntu-latest
            target: aarch64-unknown-linux-musl
            command: cross
          - name: armv7-unknown-linux-gnueabihf
            runner: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            command: cross
          - name: armv7-unknown-linux-musleabihf
            runner: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            command: cross
          - name: riscv64gc-unknown-linux-gnu
            runner: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
            command: cross
          - name: riscv64gc-unknown-linux-musl
            runner: ubuntu-latest
            target: riscv64gc-unknown-linux-musl
            command: cross
          - name: loongarch64-unknown-linux-gnu
            runner: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
            command: cross
          - name: loongarch64-unknown-linux-musl
            runner: ubuntu-latest
            target: riscv64gc-unknown-linux-musl
            command: cross
          - name: s390x-unknown-linux-gnu
            runner: ubuntu-latest
            target: s390x-unknown-linux-gnu
            command: cross
          - name: x86_64-unknown-freebsd
            runner: ubuntu-latest
            target: x86_64-unknown-freebsd
            command: cross
          - name: x86_64-pc-windows-msvc
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            command: cargo
          - name: i686-pc-windows-msvc
            runner: windows-latest
            target: i686-pc-windows-msvc
            command: cargo
          - name: aarch64-pc-windows-msvc
            runner: windows-latest
            target: aarch64-pc-windows-msvc
            command: cargo
          - name: x86_64-apple-darwin
            runner: macos-latest
            target: x86_64-apple-darwin
            command: cargo
          - name: aarch64-apple-darwin
            runner: macos-latest
            target: aarch64-apple-darwin
            command: cargo
 
    # The steps to run for each matrix item
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
 
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
 
      - name: Setup cache
        if: matrix.command != 'cross'
        uses: Swatinem/rust-cache@v2

      - name: Determine Ferron version
        shell: bash
        run: |
          FERRON_VERSION_CARGO="$(cat ferron/Cargo.toml | grep -E '^version' | sed -E 's|.*"([0-9a-zA-Z.+-]+)"$|\1|g')"
          FERRON_VERSION_GIT="$(git tag --sort=-committerdate | head -n 1 | sed s/[^0-9a-zA-Z.+-]//g)"
          if [ "$FERRON_VERSION_CARGO" != "" ]; then
            echo "Version determined from Cargo.toml file"
            echo "FERRON_VERSION=$FERRON_VERSION_CARGO" >> $GITHUB_ENV
          elif  [ "$FERRON_VERSION_GIT" != "" ]; then
            echo "Version determined from the Git tag"
            echo "FERRON_VERSION=$FERRON_VERSION_GIT" >> $GITHUB_ENV
          else
            echo "Can't determine the server version!" 2>&1
            exit 1
          fi

      - name: Install Cross
        if: matrix.command == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross --force

      - name: Build binaries
        run: "${{ matrix.command }} build --verbose --locked --release --target ${{ matrix.target }}"